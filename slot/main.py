from fastapi import FastAPI
import secrets
from pydantic import BaseModel
app = FastAPI()
result=0
symbols = (
    ['üçì'] * 150 +    # –∫–ª—É–±–Ω–∏–∫–∞ - —á–∞—Å—Ç—ã–π, –º–∞–ª–µ–Ω—å–∫–∞—è –≤—ã–ø–ª–∞—Ç–∞
    ['üçá'] * 120 +    # –≤–∏–Ω–æ–≥—Ä–∞–¥
    ['üçå'] * 100 +    # –±–∞–Ω–∞–Ω
    ['üçé'] * 80 +    # —è–±–ª–æ–∫–æ
    ['üçâ'] * 50  +    # –∞—Ä–±—É–∑
    ['üç∞'] * 40  +    # —Ç–æ—Ä—Ç - —Ä–µ–¥–∫–∏–π, —Ö–æ—Ä–æ—à–∞—è –≤—ã–ø–ª–∞—Ç–∞
    ['‚≠ê'] * 30  +    # –∑–≤–µ–∑–¥–∞ - —Å—Ä–µ–¥–Ω–∏–π
    ['üíé'] * 25  +    # –±—Ä–∏–ª–ª–∏–∞–Ω—Ç - –æ—á–µ–Ω—å —Ä–µ–¥–∫–∏–π, –∫—Ä—É–ø–Ω–∞—è –≤—ã–ø–ª–∞—Ç–∞
    ['‚ö°'] * 25   +    # –º–æ–ª–Ω–∏—è - –±–æ–Ω—É—Å
    ['üçí'] * 130 +    # —á–∞—Å—Ç–æ
    ['üçã'] * 120 +    # —á–∞—Å—Ç–æ
    ['üî•'] * 20 +     # –≤–∞–π–ª–¥—ã
    ['üö™'] * 10      # —à—Ç–æ—Ä–∞ (–≤–∏–∑—É–∞–ª—å–Ω–æ –∑–∞–Ω–∏–º–∞–µ—Ç –≤—Å–µ –º–µ—Å—Ç–æ, –Ω–æ –ø–æ —Ñ–∞–∫—Ç—É –ø—Ä–æ—Å—Ç–æ —Å–≤–µ—Ä—Ö—É –Ω–∞–∫—Ä—ã–≤–∞–µ—Ç —Å–∏–º–≤–æ–ª—ã) 
)





shutterMultiplier = (
    [2] * 50 +   # 40%
    [3] * 30 +   # 30%
    [5] * 10 +   # 15%
    [10] * 4 +  # 10%
    [25] * 2 +   # 4%
    [100] * 1    # 1%
)

@app.get('/bonus')
def bonusGame(bet:int,counter:int,gameResults: str):
    multiplier=1
    payout = 0
    spinsAmount = 10
    shutterPos=[]
    overallPayout=0
    for z in range(spinsAmount):
        result=[]
        payout=0
        for i in range(0,31):
            result.append(secrets.choice(symbols))
        for pos in range(len(shutterPos)):
            result[shutterPos[pos]]='üö™'
        
        column1=result[:5]
        column2=result[5:10]
        column3=result[10:15]
        column4=result[15:20]
        column5=result[20:25]
        column6=result[25:]
        if result.count('üî•')>=1:
            multiplier = 2*result.count('üî•')
        else:
            multiplier = 1

        if result.count('üçì')>=7:
            payout=(payout + bet*0.25)
            counter=counter+1
            gameResults = gameResults + '–°—ã–≥—Ä–∞–ª–∏ üçì' + str(payout)
        if result.count('üçá')>=7:
            payout= (payout + bet*0.35)
            counter=counter+1
            gameResults = gameResults + '–°—ã–≥—Ä–∞–ª–∏ üçá' + str(payout)
        if result.count('üçå')>=7:
            payout=(payout + bet*0.5)
            counter=counter+1
            gameResults = gameResults + '–°—ã–≥—Ä–∞–ª–∏ üçå' + str(payout)
        if result.count('üç∞')>=7:
            
            payout=(payout + bet*1)
            counter=counter+1
            gameResults = gameResults + '–°—ã–≥—Ä–∞–ª–∏ üç∞' + str(payout)
        if result.count('‚≠ê')>=7:
            
            payout=(payout + bet*1.25)
            counter=counter+1
            gameResults = gameResults + '–°—ã–≥—Ä–∞–ª–∏ ‚≠ê' +str( payout)
        if result.count('üíé')>=7:
            
            payout=(payout + bet*1.5)
            counter=counter+1
            gameResults = gameResults + '–°—ã–≥—Ä–∞–ª–∏ üíé' + str(payout)
        if result.count('üçé')>=7:
            
            payout=(payout + bet*0.45)
            counter=counter+1
            gameResults = gameResults + '–°—ã–≥—Ä–∞–ª–∏ üçé' + str(payout)
        if result.count('üçí')>=7:
            
            payout=(payout + bet*0.3)
            counter=counter+1
            gameResults = gameResults + '–°—ã–≥—Ä–∞–ª–∏ üçí' + str(payout)
        if result.count('üçã')>=7:
            
            payout=(payout + bet*0.4)
            counter=counter+1
            gameResults = gameResults + '–°—ã–≥—Ä–∞–ª–∏ üçã' + str(payout)
        if result.count('üçâ')>=7:
            
            payout=(payout + bet*0.75)
            counter=counter+1
            gameResults = gameResults + '–°—ã–≥—Ä–∞–ª–∏ üçâ' + str(payout)
        if result.count('üö™')>=1:
            for i in range(result.count('üö™')):
                multiplier = multiplier + secrets.choice(shutterMultiplier)
            payout=payout*multiplier
            shutterPos.append(result.index('üö™'))

        else:
            payout=payout*multiplier
        if result.count('‚ö°')>=4:
            spinsAmount = spinsAmount+3
        overallPayout=overallPayout+payout

    return overallPayout
    


bonusCount =0
@app.get('/')
def spinTest():
    bet = 100
    counter = 0
    gameResults = ''
    result=[]
    multiplier=1
    payout=0
    bonusCount=0
    for i in range(0,30):
        result.append(secrets.choice(symbols))
    column1=result[:5]
    column2=result[5:10]
    column3=result[10:15]
    column4=result[15:20]
    column5=result[20:25]
    column6=result[25:]
    if result.count('üî•')>=1:
        multiplier = 2*result.count('üî•')
    else:
        multiplier = 1
        
    if result.count('üçì')>=7:
            payout=(payout + bet*0.25)
            counter=counter+1
            gameResults = gameResults + '–°—ã–≥—Ä–∞–ª–∏ üçì' + str(payout)
    if result.count('üçá')>=7:
        payout= (payout + bet*0.35)
        counter=counter+1
        gameResults = gameResults + '–°—ã–≥—Ä–∞–ª–∏ üçá' + str(payout)
    if result.count('üçå')>=7:
        payout=(payout + bet*0.5)
        counter=counter+1
        gameResults = gameResults + '–°—ã–≥—Ä–∞–ª–∏ üçå' + str(payout)
    if result.count('üç∞')>=7:
            
        payout=(payout + bet*1)
        counter=counter+1
        gameResults = gameResults + '–°—ã–≥—Ä–∞–ª–∏ üç∞' + str(payout)
    if result.count('‚≠ê')>=7:
            
        payout=(payout + bet*1.25)
        counter=counter+1
        gameResults = gameResults + '–°—ã–≥—Ä–∞–ª–∏ ‚≠ê' +str( payout)
    if result.count('üíé')>=7:
            
        payout=(payout + bet*1.5)
        counter=counter+1
        gameResults = gameResults + '–°—ã–≥—Ä–∞–ª–∏ üíé' + str(payout)
    if result.count('üçé')>=7:
            
        payout=(payout + bet*0.45)
        counter=counter+1
        gameResults = gameResults + '–°—ã–≥—Ä–∞–ª–∏ üçé' + str(payout)
    if result.count('üçí')>=7:
            
            payout=(payout + bet*0.3)
            counter=counter+1
            gameResults = gameResults + '–°—ã–≥—Ä–∞–ª–∏ üçí' + str(payout)
    if result.count('üçã')>=7:
            
        payout=(payout + bet*0.4)
        counter=counter+1
        gameResults = gameResults + '–°—ã–≥—Ä–∞–ª–∏ üçã' + str(payout)
    if result.count('üçâ')>=7:
            
        payout=(payout + bet*0.75)
        counter=counter+1
        gameResults = gameResults + '–°—ã–≥—Ä–∞–ª–∏ üçâ' + str(payout)
    if result.count('üö™')>=1:
        for i in range(result.count('üö™')):
            multiplier = multiplier + secrets.choice(shutterMultiplier)
        payout=payout*multiplier
    else:
        payout=payout*multiplier
    if result.count('‚ö°')>=4:
        bonusCount += 1 
        payout = bonusGame(bet,counter,gameResults)
        gameResults = gameResults + '–°—ã–≥—Ä–∞–ª–∞ –ë–û–ù–£–°–ö–ê üíµüíµ' + str(payout)
    else:
        bonusCount=0
    return {'payout':payout,'—Å–∫–æ–ª—å–∫–æ —Å–∏–º–≤–æ–ª–æ–≤ —Å—ã–≥—Ä–∞–ª–æ': counter, 'bonusCount': bonusCount, '—á—Ç–æ —Å—ã–≥—Ä–∞–ª–æ:': gameResults, 'multiplier':multiplier, 'column1':column1,'column2':column2,'column3':column3,'column4':column4,'column5':column5,'column6':column6}
    





@app.get('/stats')
def stats():
    t=[]
    o=[]
    for j in range(1,1000000):
        t.append(spinTest()['payout'])
    

    for p in range(1,1000000):
        o.append(spinTest()['bonusCount']) # –º–Ω–æ–≥–æ —á–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ –æ–±—Ä–∞—â–∞–µ–º—Å—è —Ç–æ–∫ –∫ –±–æ–Ω—É—Å –∫–∞—É–Ω—Ç
    return {
        'RTP': str(sum(t)/len(t))[:5]+'%',
        'BONUS CHANCE': str(float(str(sum(o)/len(o))[:5])*100)[:5]+'%'
    }


class Balance(BaseModel):
    balance: int

@app.post('/')
def create_balance(newBalance = Balance):
    return {'successs':True}

